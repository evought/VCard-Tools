<?php
/**
 * Unit tests for PropertyContainerImpl.
 * @author Eric Vought <evought@pobox.com>
 * 2014-11-16
 * @copyright Eric Vought 2014, Some rights reserved.
 * @license MIT http://opensource.org/licenses/MIT
 */

namespace EVought\vCardTools;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-12-27 at 18:24:39.
 */
class PropertyContainerImplTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var PropertyContainerImpl
     */
    protected $container;
    
    /**
     *
     * @var PropertySpecification[]
     */
    protected $specifications;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->container = new PropertyContainerImpl;
        $this->specifications['adr'] = new PropertySpecification(
                'adr',
                PropertySpecification::MULTIPLE_PROPERTY,
                __NAMESPACE__ . '\StructuredPropertyBuilderImpl',
                PropertySpecification::$cardinalities['Zero To N'],
                ['allowedFields'=>['StreetAddress', 'Locality', 'Region']]
            );
        $this->specifications['url'] = new PropertySpecification(
                'url',
                PropertySpecification::MULTIPLE_PROPERTY,
                __NAMESPACE__ . '\SimplePropertyBuilder',
                PropertySpecification::$cardinalities['Zero To N']
            );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @group default
     */
    public function testCount()
    {
        $this->assertEquals(0, $this->container->count());
        $this->container->push(
            $this->specifications['url']
                ->getBuilder()->setValue('http://golf.com')->build(),
            $this->specifications['adr']
                ->getBuilder()->setField('Region', 'NM')->build() );
        $this->assertEquals(2, $this->container->count());
    }

    /**
     * @group default
     */
    public function testCurrent()
    {
        $this->assertFalse($this->container->current());
        
        $url = $this->specifications['url']
                ->getBuilder()->setValue('http://golf.com')->build();
        $this->container->push($url);

        $this->container->rewind();        
        $this->assertEquals($url, $this->container->current());
    }

    /**
     * @group default
     */
    public function testKey()
    {
        $this->assertNull($this->container->key());
        
        $url = $this->specifications['url']
                ->getBuilder()->setValue('http://golf.com')->build();
        $this->container->push($url);

        $this->container->rewind();        
        $this->assertNull($this->container->key());
    }

    /**
     * @group default
     */
    public function testNext()
    {
        $url = $this->specifications['url']
                ->getBuilder()->setValue('http://golf.com')->build();
        $adr = $this->specifications['adr']
                ->getBuilder()->setField('Region', 'NM')->build();
        $this->container->push($url, $adr);
        
        $this->container->rewind();
        $this->container->next();
        $this->assertEquals($adr, $this->container->current());
    }

    /**
     * @group default
     */
    public function testRewind()
    {
        $url = $this->specifications['url']
                ->getBuilder()->setValue('http://golf.com')->build();
        $adr = $this->specifications['adr']
                ->getBuilder()->setField('Region', 'NM')->build();
        $this->container->push($url, $adr);
        
        $this->container->next();
        $this->assertEquals($adr, $this->container->current());
        $this->container->rewind();
        $this->assertEquals($url, $this->container->current());
    }

    /**
     * @group default
     */
    public function testValid()
    {
        $url = $this->specifications['url']
                ->getBuilder()->setValue('http://golf.com')->build();
        $this->container->push($url);
        $this->assertTrue($this->container->valid());
        $this->container->next();
        $this->assertFalse($this->container->valid());
    }

}
