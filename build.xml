<!--
  -  Phing build file for VCard-Tools
  -  Author: Eric Vought
  -  2014-11
  -  License: MIT (http://opensource.org/licenses/MIT)
  -->
<project name="VCard-Tools" default="dist" basedir="."
	description="Phing build file for VCard-Tools project">

  <!-- set global properties for this build -->
  <property name="sql.dir" value="sql"/>
  <property name="test.dir" value="tests"/>
  <property name="dist.dir"  value="dist"/>
  <property name="doc.dir"  value="docs"/>
  <property name="apidoc.dir" value="docs/api"/>

  <!-- per-user properties for overriding settings, such as db connection -->
  <property file="${env.USER}.properties"/>

  <!-- database properties for testing -->
  <property file="db.properties"/>

  <filterchain id="db.unittest.filterset">
    <replacetokens begintoken="@" endtoken="@">
    <token key="db.unittest.user"   value="${db.unittest.user}"/>
    <token key="db.unittest.passwd" value="${db.unittest.passwd}"/>
    <token key="db.unittest.passwd" value="${db.unittest.passwd}"/>
    <token key="db.unittest.dbname" value="${db.unittest.dbname}"/>
    <token key="db.unittest.dsn"    value="${db.unittest.dsn}"/>
    </replacetokens>
  </filterchain>

  <!-- temporary files to tidy up -->
  <patternset id="backupFiles.pattern"
    includes="**/*~ **/*.bak" />
	
  <fileset id="phpapi.fileset" dir="${project.basedir}"
	includes="VCard.php, vcard-db.php, vcard-templates.php"/>

  <!-- list of generated configuration files -->
  <fileset id="configFiles.fileset" dir="${project.basedir}"
           includes="database.php"/>

  <target name="config"
          description="Substitute macros to create needed configuration files">
    <copy file="${project.basedir}/database.php.in" toFile="${project.basedir}/database.php">
      <filterchain refid="db.unittest.filterset"/>
    </copy>
  </target>

  <target name="cleanConfig"
          description="Remove generated configuration files." >
    <delete>
      <fileset refid="configFiles.fileset" />
    </delete>
  </target>

  <target name="init" depends="config">
    <tstamp/>
  </target>

  <target name="doc" depends="init"
	description="Generate API docs">
    <mkdir dir="${apidoc.dir}"/>
    <phpdoc2 title="${phing.project.name} API Documentation"
  	destdir="${apidoc.dir}">
      <fileset refid="phpapi.fileset"/>
    </phpdoc2>
  </target>
	
  <target name="dist" depends="init"
        description="generate the distribution" >
    <mkdir dir="${dist.dir}"/>
  </target>

  <target name="test" depends="init"
          description="Execute PHPUnit test suite">
    <phpunit haltonfailure="true" haltonerror="true"
    	pharlocation="${phpunit.phar}">
      <formatter type="plain" usefile="false"/>
      <batchtest>
        <fileset dir="tests">
    	  <include name="**/*Test*.php"/>
        </fileset>
      </batchtest>
    </phpunit>
  </target>

  <target name="tidy" description="Get rid of temporary and backup files">
    <delete>
      <fileset defaultexcludes="no" dir=".">
        <patternset refid="backupFiles.pattern"/>
      </fileset>
    </delete>
  </target>

  <target name="createUnitDB" depends="config"
      description="Create the database for unit testing">
    <pdosqlexec
      url="${db.unittest.dsn}" 
      userid="${db.devel.user}" 
      password="${db.devel.passwd}"
      autocommit="true"> 
      CREATE DATABASE ${db.unittest.dbname}; 
      GRANT SELECT, INSERT, UPDATE, DELETE on ${db.unittest.dbname}.*
          TO '${db.unittest.user}'@'${db.unittest.host}'; 
    </pdosqlexec>
  </target>

  <target name="unitDBSchema" depends="createUnitDB"
          description="Load the table definitions for unit test database.">
    <pdosqlexec
      url="${db.unittest.dsn};dbname=${db.unittest.dbname}" 
      userid="${db.devel.user}" 
      password="${db.devel.passwd}"
      autocommit="true"
      src="${sql.dir}/vcard.sql" />
  </target> 

  <target name="dropUnitDB" depends="config"
      description="Create the database for unit testing">
  <pdosqlexec
        url="${db.unittest.dsn}"
  	userid="${db.devel.user}" 
        password="${db.devel.passwd}"
        autocommit="true"> 
      DROP DATABASE ${db.unittest.dbname}; 
    </pdosqlexec> 
  </target>

  <target name="cleanDocs"
	description="Remove generated documentation">
    <delete dir="${apidoc.dir}"/>
  </target>
	
  <target name="clean" depends="tidy,cleanDocs"
        description="clean up" >
    <delete dir="${dist.dir}"/>
  </target>
</project>
