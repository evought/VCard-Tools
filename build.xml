<!--
  -  Ant build file for VCard-Tools
  -  Author: Eric Vought
  -  2014-11
  -  License: MIT (http://opensource.org/licenses/MIT)
  -->
<project name="VCard-Tools" default="dist" basedir=".">
    <description>
    Tools for manipulating VCards (RFC 6350) in PHP, including in-memory 
    representation, database persistence, and HTML templating.
    </description>

  <!-- set global properties for this build -->
  <property name="sql.dir" location="sql"/>
  <property name="test.dir" location="tests"/>
  <property name="dist.dir"  location="dist"/>
  <property name="doc.dir"  location="docs"/>

  <!-- per-user properties for overriding settings, such as db connection -->
  <property file="${user.name}.properties"/>

  <!-- database properties for testing -->
  <property file="db.properties"/>

  <filterset id="db.unittest.filterset">
  <!-- NOTE: filtersets cannot contain propertysets in ant 1.9.2;
     - Do it the hard way. -->
    <filter token="db.unittest.user"   value="${db.unittest.user}"/>
    <filter token="db.unittest.passwd" value="${db.unittest.passwd}"/>
    <filter token="db.unittest.passwd" value="${db.unittest.passwd}"/>
    <filter token="db.unittest.dbname" value="${db.unittest.dbname}"/>
    <filter token="db.unittest.dsn"    value="${db.unittest.dsn}"/>
  </filterset>

  <!-- temporary files to tidy up -->
  <patternset id="backupFiles.pattern"
    includes="**/*~ **/*.bak" />

  <!-- list of generated configuration files -->
  <fileset id="configFiles.fileset" dir="${basedir}"
           includes="phpunit.xml database.php"/>

  <target name="config"
          description="Substitute macros to create needed configuration files">
    <copy file="${basedir}/phpunit.xml.in" toFile="${basedir}/phpunit.xml">
      <filterset refid="db.unittest.filterset"/>
    </copy>
    <copy file="${basedir}/database.php.in" toFile="${basedir}/database.php">
      <filterset refid="db.unittest.filterset"/>
    </copy>
  </target>

  <target name="cleanConfig"
          description="Remove generated configuration files." >
    <delete>
      <fileset refid="configFiles.fileset" />
    </delete>
  </target>

  <target name="init" depends="config">
    <tstamp/>
  </target>

  <target name="dist" depends="init"
        description="generate the distribution" >
    <mkdir dir="${dist.dir}"/>
  </target>

  <target name="test" depends="init"
          description="Execute PHPUnit test suite">
    <echo message="Running unit tests with PHPUnit" />

    <exec executable="phpunit" failonerror="true">
       <arg value="${test.dir}"/>
    </exec>
  </target>

  <target name="tidy" description="Get rid of temporary and backup files">
    <delete>
      <fileset defaultexcludes="no" dir=".">
        <patternset refid="backupFiles.pattern"/>
      </fileset>
    </delete>
  </target>

  <target name="createUnitDB" depends="config"
      description="Create the database for unit testing">
    <sql
      classpath="${db.jdbcdriver}"
      driver="com.mysql.jdbc.Driver" 
      url="jdbc:mysql://${db.unittest.host}/" 
      userid="${db.devel.user}" 
      password="${db.devel.passwd}"
      autocommit="true"> 
      CREATE DATABASE ${db.unittest.dbname}; 
      GRANT SELECT, INSERT, UPDATE, DELETE on ${db.unittest.dbname}.*
          TO '${db.unittest.user}'@'${db.unittest.host}'; 
    </sql> 
  </target>

  <target name="unitDBSchema" depends="createUnitDB"
          description="Load the table definitions for unit test database.">
    <sql
      classpath="${db.jdbcdriver}"
      driver="com.mysql.jdbc.Driver" 
      url="jdbc:mysql://${db.unittest.host}/${db.unittest.dbname}" 
      userid="${db.devel.user}" 
      password="${db.devel.passwd}"
      autocommit="true"
      src="${sql.dir}/vcard.sql" />
  </target> 

  <target name="dropUnitDB" depends="config"
      description="Create the database for unit testing">
    <sql
      classpath="${db.jdbcdriver}"
      driver="com.mysql.jdbc.Driver" 
      url="jdbc:mysql://${db.unittest.host}/${db.unittest.dbname}" 
      userid="${db.devel.user}" 
      password="${db.devel.passwd}"
      autocommit="true"> 
      DROP DATABASE ${db.unittest.dbname}; 
    </sql> 
  </target>

  <target name="clean" depends="tidy"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${dist.dir}"/>
  </target>
</project>
